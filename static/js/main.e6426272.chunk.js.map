{"version":3,"sources":["routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","api.ts","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["Chart","Price","Title","styled","h1","props","theme","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useState","loading","setLoading","coinId","useParams","state","useLocation","info","setInfo","priceInfo","setPriceInfo","priceMatch","useRouteMatch","chartMatch","useEffect","a","fetch","json","infoData","priceData","name","rank","symbol","open_source","description","total_supply","max_supply","to","path","fetchCoins","then","response","CoinsList","ul","li","bgColor","Img","img","Coins","useQuery","isLoading","data","slice","map","coin","pathname","id","src","Router","basename","process","GlobalStyle","createGlobalStyle","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"sPAIeA,MAJf,WACE,OAAO,wCCGMC,I,kBAAAA,EAJf,WACE,OAAO,wCCYHC,EAAQC,IAAOC,GAAV,+DAEA,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAG5BC,EAASL,IAAOM,KAAV,sEAKNC,EAAYP,IAAOQ,IAAV,0FAMTC,EAAST,IAAOU,OAAV,mHAONC,EAAWX,IAAOQ,IAAV,yKAORI,EAAeZ,IAAOQ,IAAV,iPAYZK,EAAcb,IAAOc,EAAV,iDAIXC,EAAOf,IAAOQ,IAAV,2HAOJQ,EAAMhB,IAAOM,KAAV,kQAOE,SAACJ,GAAD,OACPA,EAAMe,SAAWf,EAAMC,MAAMC,YAAcF,EAAMC,MAAMe,aAmJ5CC,I,cAAAA,EAhFf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACQC,EAAWC,cAAXD,OACAE,EAAUC,cAAVD,MACR,EAAwBL,qBAAxB,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAkCR,qBAAlC,mBAAOS,EAAP,KAAkBC,EAAlB,KACMC,EAAaC,YAAc,kBAC3BC,EAAaD,YAAc,kBAcjC,OAbAE,qBAAU,WACR,sBAAC,8BAAAC,EAAA,sEAESC,MAAM,wCAAD,OAAyCb,IAFvD,8BAGGc,OAHH,cACOC,EADP,gBAKSF,MAAM,0CAAD,OAA2Cb,IALzD,8BAMGc,OANH,OAIOE,EAJP,OAOCX,EAAQU,GACRR,EAAaS,GACbjB,GAAW,GATZ,2CAAD,KAWC,CAACC,IAEF,eAAChB,EAAD,WACE,cAACE,EAAD,UACE,cAACV,EAAD,WACQ,OAAL0B,QAAK,IAALA,OAAA,EAAAA,EAAOe,MAAOf,EAAMe,KAAOnB,EAAU,aAAH,OAAkBM,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMa,SAG9DnB,EACC,cAAChB,EAAD,yBAEA,qCACE,eAACM,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOe,QAAP,IAAOA,OAAP,EAAOA,EAAMc,UAEf,eAAC7B,EAAD,WACE,2CACA,4CAAQe,QAAR,IAAQA,OAAR,EAAQA,EAAMe,aAEhB,eAAC9B,EAAD,WACE,gDACA,gCAAW,OAAJe,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,aAAc,MAAQ,aAGvC,cAAC9B,EAAD,iBAAcc,QAAd,IAAcA,OAAd,EAAcA,EAAMiB,cACpB,eAACjC,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOiB,QAAP,IAAOA,OAAP,EAAOA,EAAWgB,kBAEpB,eAACjC,EAAD,WACE,+CACA,sCAAOiB,QAAP,IAAOA,OAAP,EAAOA,EAAWiB,mBAItB,eAAC/B,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfgB,EAAf,SACE,cAAC,IAAD,CAAMc,GAAE,WAAMxB,EAAN,UAAR,qBAEF,cAACP,EAAD,CAAKC,SAAyB,OAAfc,EAAf,SACE,cAAC,IAAD,CAAMgB,GAAE,WAAMxB,EAAN,UAAR,wBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAI,iBAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,iBAAX,SACE,cAAC,EAAD,gBCrNP,SAASC,IACZ,OAAOb,MAAM,wCAAwCc,MAAK,SAACC,GAAD,OACxDA,EAASd,UCGf,IAAM9B,EAAYP,IAAOQ,IAAV,0FAKTC,EAAST,IAAOU,OAAV,mHAON0C,EAAYpD,IAAOqD,GAAV,0BAETlC,EAAOnB,IAAOsD,GAAV,+RAEC,SAACpD,GAAD,OAAWA,EAAMC,MAAMoD,WAWnB,SAACrD,GAAD,OAAWA,EAAMC,MAAMC,eAKhCL,EAAQC,IAAOC,GAAV,+DAEA,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAG5BC,EAASL,IAAOM,KAAV,sEAKNkD,EAAMxD,IAAOyD,IAAV,oFA8CMC,MA/Bf,WACE,MAA4BC,mBAAkB,WAAYV,GAAlDW,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACnB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,UACE,cAAC,EAAD,6BAEDD,EACC,cAAC,EAAD,yBAEA,cAACR,EAAD,iBACGS,QADH,IACGA,OADH,EACGA,EAAMC,MAAM,EAAG,KAAKC,KAAI,SAACC,GAAD,OACvB,cAAC,EAAD,UACE,eAAC,IAAD,CACEjB,GAAI,CACFkB,SAAS,IAAD,OAAMD,EAAKE,IACnBzC,MAAO,CAAEe,KAAMwB,EAAKxB,OAHxB,UAME,cAACgB,EAAD,CACEW,IAAG,8CAAyCH,EAAKE,GAA9C,eAEJF,EAAKxB,KATR,cADSwB,EAAKE,aCxDbE,I,GAAAA,GAdf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,gBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtB,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCTJuB,GAAcC,YAAH,y+CAuDI,SAACtE,GAAD,OAAWA,EAAMC,MAAMoD,WAClC,SAACrD,GAAD,OAAWA,EAAMC,MAAMe,aAkBlBuD,OATf,WACE,OACE,qCACE,cAACF,GAAD,IACA,cAAC,GAAD,QCjEAG,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,IAAD,CAAevE,MCVc,CACjCoD,QAAS,UACTrC,UAAW,UACXd,YAAa,WDOT,SACE,cAAC,GAAD,UAIN4E,SAASC,eAAe,W","file":"static/js/main.e6426272.chunk.js","sourcesContent":["function Chart() {\n  return <h1>Chart</h1>;\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import { useEffect, useState } from \"react\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const [loading, setLoading] = useState(true);\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const [info, setInfo] = useState<InfoData>();\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  useEffect(() => {\n    (async () => {\n      const infoData = await (\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n      ).json();\n      const priceData = await (\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n      ).json();\n      setInfo(infoData);\n      setPriceInfo(priceData);\n      setLoading(false);\n    })();\n  }, [coinId]);\n  return (\n    <Container>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : info?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{info?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${info?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Open Source:</span>\n              <span>{info?.open_source ? \"Yes\" : \"No\"}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{info?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{priceInfo?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{priceInfo?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","export function fetchCoins() {\n    return fetch(\"https://api.coinpaprika.com/v1/coins\").then((response) =>\n      response.json()\n    );\n  }","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://static.coinpaprika.com/coin/${coin.id}/logo.png`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};"],"sourceRoot":""}